#BlueJ class context
comment0.params=
comment0.target=SolarGUI()
comment0.text=\r\n\ Konstruktor\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment10.params=
comment10.target=void\ draw_polynom()
comment10.text=\r\n\ Zeichnet\ das\ Polynom\ in\ Punkten\r\n
comment11.params=i_x\ i_y
comment11.target=boolean\ color_black_check(int,\ int)
comment11.text=\r\n\ Color\ check\r\n
comment12.params=x_scale
comment12.target=int\ x_scale(int)
comment12.text=\r\n\ scaler\ for\ x\ coordinates\r\n
comment13.params=y_scale
comment13.target=int\ y_scale(int)
comment13.text=\r\n\ scaler\ for\ y\ coordinates\r\n
comment14.params=g
comment14.target=void\ paint(java.awt.Graphics)
comment15.params=iWait
comment15.target=void\ waitProcessing(int)
comment16.params=e
comment16.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment16.text=\r\n\ ActionListener\r\n
comment17.params=f
comment17.target=void\ itemStateChanged(java.awt.event.ItemEvent)
comment17.text=\r\n\ ItemListener\r\n
comment18.params=event
comment18.target=void\ windowClosing(java.awt.event.WindowEvent)
comment18.text=\r\n\ WindowListener\ Methoden\r\n
comment19.params=event
comment19.target=void\ windowIconified(java.awt.event.WindowEvent)
comment2.params=
comment2.target=void\ run()
comment20.params=event
comment20.target=void\ windowOpened(java.awt.event.WindowEvent)
comment21.params=event
comment21.target=void\ windowClosed(java.awt.event.WindowEvent)
comment22.params=event
comment22.target=void\ windowActivated(java.awt.event.WindowEvent)
comment23.params=event
comment23.target=void\ windowDeiconified(java.awt.event.WindowEvent)
comment24.params=event
comment24.target=void\ windowDeactivated(java.awt.event.WindowEvent)
comment25.params=event
comment25.target=void\ exitForm(java.awt.event.WindowEvent)
comment3.params=
comment3.target=void\ init()
comment3.text=\r\n\ init\ state\r\n
comment4.params=
comment4.target=void\ reset()
comment4.text=\r\n\ init\ state\r\n
comment5.params=str_fail
comment5.target=void\ fail(java.lang.String)
comment5.text=\r\n\ init\ fail\r\n
comment6.params=
comment6.target=void\ analyze_ordinate()
comment6.text=\r\n\ analyze\ ordinate\ state\r\n\ Diese\ verschachtelte\ for\ Schlaufe\ wird\ bis\ zum\ Schluss\ durchlaufen,\ auch\ nach\ dem\ der\ Ursprung\ erfasst\ werden\ konnte.\r\n
comment7.params=
comment7.target=void\ analyze_abszisse()
comment7.text=\r\n\ analyze\ abszisse\ state\r\n
comment8.params=
comment8.target=void\ open_picture()
comment8.text=\r\n\ open\ picture\r\n
comment9.params=
comment9.target=void\ math_function()
comment9.text=\r\n\ make\ math\ function\r\n\ In\ dieser\ Methode\ werden\ St\u00FCtzwerte\ an\ der\ gegebenen\ Kurve\ erfasst\ und\ mittels\ Lagrange\ interpoliert\r\n
numComments=26
